<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ExamSolutionMapper">

	<resultMap type="ExamSolution" id="ExamSolutionResultMap">
			<id column="EXAMSOLUTION_ID" property="EXAMSOLUTION_ID" />
			<result column="SUBGROUP" property="SUBGROUP"/>
			<result column="RISKTYPE" property="RISKTYPE"/>
			<result column="STARTAGE" property="STARTAGE"/>
			<result column="ENDAGE" property="ENDAGE"/>
			<result column="FEATURES" property="FEATURES"/>
			<result column="CREATEBY" property="createBY"/>
			<result column="CREATEON" property="createON"/>
	</resultMap>

	<!--表名 -->
	<sql id="tableName">
		EXAM_EXAMSOLUTION
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		SUBGROUP,	
		RISKTYPE,	
		STARTAGE,	
		ENDAGE,	
		FEATURES,	
		CREATEBY,	
		CREATEON,	
		EXAMSOLUTION_ID,
		EXAMGUIDELINE_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{SUBGROUP},	
		#{RISKTYPE},	
		#{STARTAGE},	
		#{ENDAGE},	
		#{FEATURES},	
		#{CREATEBY},	
		#{CREATEON},	
		#{EXAMSOLUTION_ID},
		#{EXAMGUIDELINE_ID}
	</sql>
	
	<!-- 通过检查指南id查询高危人群检查手段 -->
	<select id="listExamSoluriionByGuideLineID" parameterType="java.lang.String" resultType="pd">
		select s.EXAMSOLUTION_ID AS EXAMSOLUTION_ID,g.EXAMGUIDELINE_ID AS EXAMGUIDELINE_ID,f.EXAMFREQUENCY_ID AS EXAMFREQUENCY_ID,
		i.EXAMITEM_ID AS EXAMITEM_ID,i.NAME as INAME,s.FEATURES AS FEATURES,s.STARTAGE STARTAGE,f.NAME AS FNAME,s.RISKTYPE as RISKTYPE from 
		exam_examsolution s left join exam_examguideline g on 
		s.EXAMGUIDELINE_ID=g.EXAMGUIDELINE_ID left join exam_examitem i on s.EXAMITEM_ID=i.EXAMITEM_ID left join exam_examfrequency f 
		on s.EXAMFREQUENCY_ID=f.EXAMFREQUENCY_ID where s.EXAMGUIDELINE_ID=#{EXAMGUIDELINE_ID}
	</select>
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			EXAMSOLUTION_ID = #{EXAMSOLUTION_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			SUBGROUP = #{SUBGROUP},
			RISKTYPE = #{RISKTYPE},
			STARTAGE = #{STARTAGE},
			ENDAGE = #{ENDAGE},
			FEATURES = #{FEATURES},
			CREATEBY = #{CREATEBY},
			CREATEON = #{CREATEON},
		EXAMSOLUTION_ID = EXAMSOLUTION_ID
		where 
		EXAMSOLUTION_ID = #{EXAMSOLUTION_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			EXAMSOLUTION_ID = #{EXAMSOLUTION_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
		<!-- 列表(全部) -->
	<select id="listAllExamSolutionAndExamItem" parameterType="pd" resultType="pd">
		select
		s.EXAMSOLUTION_ID AS EXAMSOLUTION_ID , i.NAME AS INAME
		from 
		exam_examsolution s left join exam_examitem i on s.EXAMITEM_ID=i.EXAMITEM_ID 
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			EXAMSOLUTION_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- shouxin -->
</mapper>