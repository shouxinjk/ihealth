<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AppuserMapper">
	
	<!--表名 -->
	<sql id="tableName">
		SYS_APP_USER
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		USER_ID,
		USERNAME,
		PASSWORD,
		NAME,
		RIGHTS,
		ROLE_ID,
		LAST_LOGIN,
		IP,
		STATUS,
		BZ,
		PHONE,
		SFID,
		START_TIME,
		END_TIME,
		YEARS,
		EMAIL,
		NUMBER,
		SEX,
		BIRTHDAY,
		MARRIAGESTATUS,
		HEIGHT,
		WEIGHT,
		BIRTHPLACE,
		LIVEPLACE,
		CAREER,
		DEGREE,
		OPENID,
		AVATAR,
		CREATEBY,
		CREATEON,
		APPKEY
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{USER_ID},
		#{USERNAME},
		#{PASSWORD},
		#{NAME},
		#{RIGHTS},
		#{ROLE_ID},
		#{LAST_LOGIN},
		#{IP},
		#{STATUS},
		#{BZ},
		#{PHONE},
		#{SFID},
		#{START_TIME},
		#{END_TIME},
		#{YEARS},
		#{EMAIL},
		#{NUMBER},
		#{SEX},
		#{BIRTHDAY},
		#{MARRIAGESTATUS},
		#{HEIGHT},
		#{WEIGHT},
		#{BIRTHPLACE},
		#{LIVEPLACE},
		#{CAREER},	
		#{DEGREE},
		#{OPENID},
		#{AVATAR},
		#{CREATEBY},
		#{CREATEON},
		#{APPKEY}
	</sql>
	
	<sql id="enterpriseUserFild">
		USER_ID,
		NAME,
		BIRTHDAY,
		SEX,
		PHONE,
		MARRIAGESTATUS,
		HEIGHT,
		WEIGHT,
		CAREER,
		BIRTHPLACE,
		LIVEPLACE,
		APPKEY
	</sql>
	<sql id="enterpriseUserValue">
		#{NAME},
		#{BIRTHDAY},
		#{SEX},
		#{PHONE},
		#{MARRIAGESTATUS},
		#{HEIGHT},
		#{WEIGHT},
		#{CAREER},
		#{BIRTHPLACE},
		#{LIVEPLACE},
		#{APPKEY}
	</sql>
	
	<!-- 用户关联关系表 -->
	<sql id="useranduser">
		sys_app_user_and_user
	</sql>
	<!-- 用户关联关系表的字段 -->
	<sql id="userAttribute">
		useranduser_id,
		user_id_one,
		user_id_two,
		connection,
		isprivacy,
		ismodify
	</sql>
	
	<!-- 用户关联关系表的值 -->
	<sql id="userValue">
		#{useranduser_id},
		#{user_id_one},
		#{user_id_two},
		#{connection},
		#{isprivacy},
		#{ismodify}
</sql>
	
	<!-- 批量添加企业用户 -->
	<insert id="saveEnterpriseUserAll" parameterType="pd">
		insert into <include refid="tableName"></include>(<include refid="enterpriseUserFild"></include>) values
		<foreach item="item" index="index" collection="list" separator="," close=";">
			(#{item.USER_ID},#{item.NAME},
			 	#{item.BIRTHDAY},
				#{item.SEX},
				#{item.PHONE},
				#{item.MARRIAGESTATUS},
				#{item.HEIGHT},
				#{item.WEIGHT},
				#{item.CAREER},
				#{item.BIRTHPLACE},
				#{item.LIVEPLACE})
		</foreach>
	</insert>
	
	<!-- 添加单个企业用户 -->
	<insert id="saveEnterpriseUser" parameterType="pd">
		insert into <include refid="tableName"></include>(<include refid="enterpriseUserFild"></include>) values
			(	#{USER_ID},
				#{NAME},
			 	#{BIRTHDAY},
				#{SEX},
				#{PHONE},
				#{MARRIAGESTATUS},
				#{HEIGHT},
				#{WEIGHT},
				#{CAREER},
				#{BIRTHPLACE},
				#{LIVEPLACE},
				#{APPKEY}
			)
	</insert>
	
	<!--修改企业用户 -->
	<update id="updateEnterpriseUser" parameterType="pd">
			update <include refid="tableName"></include> set 	
				NAME = #{NAME},
			 	BIRTHDAY = #{BIRTHDAY},
				SEX = #{SEX},
				PHONE = #{PHONE},
				MARRIAGESTATUS = #{MARRIAGESTATUS},
				HEIGHT = #{HEIGHT},
				WEIGHT = #{WEIGHT},
				CAREER = #{CAREER},
				BIRTHPLACE = #{BIRTHPLACE},
				LIVEPLACE = #{LIVEPLACE}
				 where USER_ID = #{USER_ID}
	</update>
	
		<!--修改企业用户 -->
	<update id="updateEnterpriseUserIsAdmin" parameterType="pd">
			update <include refid="tableName"></include> set 	
				ISADMIN = #{ISADMIN}
				 where USER_ID = #{USER_ID}
	</update>
	
	<!--根据电话查询单个企业用户 -->
	<select id="findEnterpriseUserByPhone" parameterType="java.lang.String" resultType="java.lang.String">
			select USER_ID from sys_app_user where PHONE = #{PHONE}
	</select>
	
	<!-- 批量添加企业用户 标签信息-->
	<insert id="saveEnterpriseUserTag" parameterType="pd">
		insert into sys_app_user_and_tag(id,user_id,tag_id) values
		<foreach item="item" index="index" collection="list" separator="," close=";">
			(#{item.ID},#{item.USER_ID},#{item.TAG_ID})
		</foreach>
	</insert>
	
	<!-- 批量添加企业用户个人疾病信息 -->
	<insert id="saveEnterpriseUserDisease" parameterType="pd">
		insert into sys_app_user_and_personal_disease(id,user_id,disease_id) values
		<foreach item="item" index="index" collection="list" separator="," close=";">
			(#{item.ID},#{item.USER_ID},#{item.DISEASE_ID})
		</foreach>
	</insert>
	
	
	<!-- 批量添加企业用户家族疾病信息 -->
	<insert id="saveEnterpriseUserDiseasefamily" parameterType="pd">
		insert into sys_app_user_and_family_disease(id,user_id,disease_id) values
		<foreach item="item" index="index" collection="list" separator="," close=";">
			(#{item.ID},#{item.USER_ID},#{item.DISEASE_ID})
		</foreach>
	</insert>
	
	
	<!-- 批量添加企业用户关注疾病信息 -->
	<insert id="saveEnterpriseUserDiseasefocus" parameterType="pd">
		insert into sys_app_user_and_focus_disease(id,user_id,disease_id) values
		<foreach item="item" index="index" collection="list" separator="," close=";">
			(#{item.ID},#{item.USER_ID},#{item.DISEASE_ID})
		</foreach>
	</insert>
	
	<select id="listDiseaseTest" resultType="Diseasetest">
		select ID,NAME from disease_test
	</select>
	
	<select id="listTagTest" resultType="Tagtest">
		select ID,NAME from tag_test
	</select>
	
	<select id="listUserTest" resultType="Usertest">
		select USER_ID,NAME,USERNAME,PHONE,SEX,MARRIAGESTATUS,HEIGHT,WEIGHT from sys_app_user_test
	</select>
	
	<!-- 通过用户名或者电话号码获取模糊查询数据 -->
	<select id="findLike" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		<where>
			<if test="NAME != null and NAME != ''">
				and NAME like CONCAT(CONCAT('%',#{NAME}),'%')
			</if>
			<if test="PHONE != null and PHONE != ''">
				and PHONE like CONCAT(CONCAT('%',#{PHONE}),'%')
			</if>
		</where>
	</select>
	
	<!-- 根据用户ID查询所有的关联用户 -->
	<select id="findUserCastUser" parameterType="pd" resultType="pd">
		SELECT 
		  u.USER_ID AS USER_ID,u.NUMBER as NUMBER,u.RIGHTS as RIGHTS,u.IP as IP,u.PHONE as PHONE,
		  u.SEX as SEX,u.MARRIAGESTATUS as MARRIAGESTATUS,u.LAST_LOGIN as LAST_LOGIN,
		  u.EMAIL as EMAIL,u.HEIGHT as HEIGHT,u.BIRTHPLACE as BIRTHPLACE,u.NAME as NAME,u.CAREER as CAREER,
		  u.STATUS as STATUS,u.OPENID as OPENID,u.PASSWORD as PASSWORD,u.BZ as BZ,u.USERNAME as USERNAME,
		  u.DEGREE as DEGREE,u.LIVEPLACE as LIVEPLACE,u.AVATAR as AVATAR,u.WEIGHT as WEIGHT,u.BIRTHDAY as BIRTHDAY,
		  uu.useranduser_id as useranduser_id,uu.connection as connection,uu.user_id_two as user_id_two,
		  uu.user_id_one as user_id_one,u.ISMODIFY as ismodify,uu.ismodify as uismodify,uu.isprivacy as isprivacy
		FROM 
		  sys_app_user u,
		  sys_app_user_and_user uu 
		WHERE u.`USER_ID` = uu.`user_id_two`  
		  AND uu.`user_id_one` = #{user_id_one}
	</select>
	
	<!-- 查询关系是否存在 -->
	<select id="findConnectionWhether" parameterType="pd" resultType="pd">
		SELECT 
		  * 
		FROM
		  sys_app_user_and_user uu 
		WHERE uu.`user_id_one` = #{user_id_one} 
		  AND uu.`user_id_two` = #{user_id_two} 
	</select>
	
	<!-- 新增关联用户 -->
	<insert id="saveRelationUser" parameterType="pd" >
		insert into <include refid="useranduser"></include> (
			<include refid="userAttribute"></include>
		) values (
			<include refid="userValue"></include>
		)
	</insert>
	
	
	
	<!-- 删除我关心的人 -->
	<delete id="deleteRelationUser" parameterType="pd" flushCache="false">
		DELETE 
		FROM
		  sys_app_user_and_user 
		WHERE sys_app_user_and_user.`useranduser_id` = #{useranduser_id}
	</delete>
	
	<!-- 根据用户ID 查询文章推送信息 -->
	<select id ="findArticlesById" parameterType="pd" resultType="pd">
		SELECT * FROM tb_article a
		<where>
			<if test="CREATEBY != null and CREATEBY != ''">
				and a.CREATEBY = #{CREATEBY}
			</if>
		</where>	
	</select>
	
	
	<!-- 保存会员跟标签的关系 -->
	<insert id="saveAppUserAndTag" parameterType="pd">
		INSERT INTO sys_app_user_and_tag 
		VALUES
		  (#{id},#{user_id},#{tag_id}) 
	</insert>
	
	<!-- 保存会员跟个人疾病关系 -->
	<insert id="saveAppUserAndPersonal" parameterType="pd">
		INSERT INTO sys_app_user_and_personal_disease 
		VALUES
		  (#{id},#{user_id},#{disease_id}) 
	</insert>
	
	<!-- 保存会员跟关注疾病的关系 -->
	<insert id="saveAppUserAndFocus" parameterType="pd">
		INSERT INTO sys_app_user_and_focus_disease 
		VALUES
		  (#{id},#{user_id},#{disease_id}) 
	</insert>
	
	<!-- 保存会员跟家族遗传疾病的关系 -->
	<insert id="saveAppUserAndFamily" parameterType="pd">
		INSERT INTO sys_app_user_and_family_disease 
		VALUES
		  (#{id},#{user_id},#{disease_id}) 
	</insert>
	
	
	<!-- 根据会员ID 删除会员跟标签的关系 -->
	<delete id="deleteTag" parameterType="pd">
		DELETE 
		FROM
		  sys_app_user_and_tag 
		WHERE user_id = #{user_id} 
	</delete>
	
	<!-- 根据会员ID 删除会员跟个人疾病的关系 -->
	<delete id="deletePersonal" parameterType="pd">
		DELETE 
		FROM
		  sys_app_user_and_personal_disease 
		WHERE user_id = #{user_id}  
	</delete>
	
	<!-- 根据会员ID 删除会员跟关注疾病的关系 -->
	<delete id="deleteFocus" parameterType="pd">
		DELETE 
		FROM
		  sys_app_user_and_focus_disease 
		WHERE user_id = #{user_id} 
	</delete>
	
	<!-- 根据会员ID 删除会员跟家族遗传疾病的关系 -->
	<delete id="deleteFamily" parameterType="pd">
		DELETE 
		FROM
		  sys_app_user_and_family_disease 
		WHERE user_id = #{user_id} 
	</delete>
	
	
	<!-- 根据ID查询 会员跟标签的关系-->
	<select id="findTagsById" parameterType="pd" resultType="pd">
		SELECT 
		  ut.tag_id 
		FROM
		  sys_app_user_and_tag ut 
		WHERE ut.user_id = #{user_id} 
	</select>
	
	<!-- 根据ID查询 会员跟个人疾病的关系-->
	<select id="findPersonalDiseasesById" parameterType="pd" resultType="pd">
		SELECT 
		  pd.disease_id 
		FROM
		  sys_app_user_and_personal_disease pd 
		WHERE pd.user_id = #{user_id} 
	</select>
	
	<!-- 根据ID查询 会员跟关注疾病的关系-->
	<select id="findFocusDiseasesById" parameterType="pd" resultType="pd">
		SELECT 
		  fd.disease_id 
		FROM
		  sys_app_user_and_focus_disease fd 
		WHERE fd.user_id = #{user_id} 
	</select>
	
	<!-- 根据ID查询 会员跟家族遗传疾病的关系-->
	<select id="findFamilyDiseasesById" parameterType="pd" resultType="pd">
		SELECT 
		  fhd.disease_id 
		FROM
		  sys_app_user_and_family_disease fhd 
		WHERE fhd.user_id = #{user_id} 
	</select>
	
	
	
	<!-- 角色表 -->
	<sql id="roleTableName">
		SYS_ROLE
	</sql>
	
	<!-- 列出某角色下的所有会员 -->
	<select id="listAllAppuserByRorlid"  parameterType="pd" resultType="pd" >
		select 
			USER_ID
		from 
		<include refid="tableName"></include>
		where 
			ROLE_ID = #{ROLE_ID}
	</select>
	
	<!-- 会员列表 -->
	<select id="userlistPage" parameterType="page" resultType="pd">
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.END_TIME,
				u.YEARS,
				u.STATUS,
				u.EMAIL,
				u.PHONE,
				u.NUMBER,
				u.SEX,
				u.BIRTHDAY,
				u.MARRIAGESTATUS,
				u.HEIGHT,
				u.WEIGHT,
				u.BIRTHPLACE,
				u.LIVEPLACE,
				u.CAREER,
				u.DEGREE,
				u.OPENID,
				u.CREATEON,
				u.CREATEBY,
				u.AVATAR,
				r.ROLE_ID,
				r.ROLE_NAME
		from <include refid="tableName"></include> u left join <include refid="roleTableName"></include> r
		on  u.ROLE_ID = r.ROLE_ID
		where 1=1
		<if test="pd.keywords != null and pd.keywords!= ''"><!-- 关键词检索 -->
			and (
				u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				u.NUMBER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{pd.ROLE_ID} 
		</if>
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 到期时间检索 -->
			and u.END_TIME &gt;= #{pd.lastLoginStart} 
		</if>
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 到期时间检索 -->
			and u.END_TIME &lt;= #{pd.lastLoginEnd} 
		</if>
		<if test="pd.STATUS != null and pd.STATUS != ''"><!-- 状态检索 -->
			and u.STATUS=#{pd.STATUS} 
		</if>
		order by u.NAME
	</select>
	
	<!-- 通过USERNAME获取数据 -->
	<select id="findByUsername" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			USERNAME = #{USERNAME}
	</select>
	
	<!-- 通过邮箱获取数据 -->
	<select id="findByEmail" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			EMAIL = #{EMAIL}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过编号获取数据 -->
	<select id="findByNumber" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			NUMBER = #{NUMBER}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 新增会员 -->
	<insert id="saveU" parameterType="pd">
		insert into <include refid="tableName"></include> (
			<include refid="Field"></include>
		) values (
			<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除用户 -->
	<delete id="deleteU" parameterType="pd">
		delete from <include refid="tableName"></include> 
		where 
			USER_ID = #{USER_ID}
	</delete>
	
	<update id="editUserIsModify" parameterType="java.lang.String">
		update <include refid="tableName"></include>
		set ISMODIFY = 1 where USER_ID = #{USER_ID}
	</update>
	
	<!-- 修改 -->
	<update id="editU" parameterType="pd">
		update  <include refid="tableName"></include>
		set USERNAME				= #{USERNAME},
			NAME					= #{NAME},
			ROLE_ID 				= #{ROLE_ID},
			BZ						= #{BZ},
			PHONE 					= #{PHONE},
			SFID 					= #{SFID},
			START_TIME	 			= #{START_TIME},
			END_TIME 				= #{END_TIME},
			YEARS					= #{YEARS},
			STATUS 					= #{STATUS},
			EMAIL					= #{EMAIL},
			NUMBER 					= #{NUMBER},
			SEX						= #{SEX},
			BIRTHDAY				= #{BIRTHDAY},
			MARRIAGESTATUS			= #{MARRIAGESTATUS},
			HEIGHT					= #{HEIGHT},
			WEIGHT					= #{WEIGHT},
			BIRTHPLACE				= #{BIRTHPLACE},
			LIVEPLACE				= #{LIVEPLACE},
			CAREER					= #{CAREER},
			DEGREE					= #{DEGREE},
			OPENID					= #{OPENID},
			AVATAR					= #{AVATAR},
			CREATEBY				= #{CREATEBY},
			CREATEON				= #{CREATEON},
			ISMODIFY				= 1
		<if test="PASSWORD != null and PASSWORD != ''">
			,PASSWORD				= #{PASSWORD}
		</if>
		<where>
			<if test="USER_ID != null and USER_ID != ''">
				and USER_ID = #{USER_ID}
			</if>
		</where>
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findByUiId" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		<where>
			<if test="USER_ID != null and USER_ID != ''">
				and USER_ID = #{USER_ID}
			</if>
			<if test="OPENID != null and OPENID != ''">
				or OPENID = #{OPENID}
			</if>
		</where>
	</select>
	
	
	
	<!-- 查询该用户是否修改基本信息 -->
	<select id="findIsModifyByUserId" parameterType="java.lang.String" resultType="pd">
		select ISMODIFY from <include refid="tableName"></include> where USER_ID = #{USER_ID}
	</select>
	
	<select id="findByUserId" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where USER_ID = #{USER_ID} 
	</select>
	
	<select id="findByOpenId" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where OPENID = #{OPENID}
	</select>
	
	<!-- 通过手机号码查询用户数据 -->
	<select id="findByPhone" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			PHONE = #{PHONE}
	</select>
	
	<!-- 通过手机号码查询用户数据 -->
	<select id="findByPhones" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			PHONE = #{PHONE} or NAME = #{PHONE}
	</select>
	
	<!-- 查询出所有关心我的人 -->
	<select id="listCareAboutMe" parameterType="java.lang.String" resultType="pd">
		select u1.USER_ID as USER_ID,u1.NAME AS NAME,u1.AVATAR as AVATAR,u2.connection as CONNECTION,
		u2.isprivacy as ISPRIVACY,u2.ismodify as ISMODIFY from sys_app_user u1 ,(select sau.user_id_one as USER_ID,sau.connection as CONNECTION,
		sau.isprivacy as ISPRIVACY,sau.ismodify as ISMODIFY from sys_app_user u,sys_app_user_and_user 
		sau where u.USER_ID = sau.user_id_two and sau.user_id_two = #{USER_ID}) u2 where u1.USER_ID = u2.USER_ID
	</select>
	
	<!-- 修改关心我的人是否可以查看我的信息 -->
	<update id="updatePrivacy" parameterType="pd">
		update sys_app_user_and_user set isprivacy = #{ISPRIVACY} 
		where user_id_one = #{USERID_ONE} and user_id_two = #{USERID_TWO}
	</update>
	
		<!-- 修改关心我的人是否修改我的信息 -->
	<update id="updateModify" parameterType="pd">
		update sys_app_user_and_user set ismodify = #{ISMODIFY} 
		where user_id_one = #{USERID_ONE} and user_id_two = #{USERID_TWO}
	</update>
	
	<!-- 修改关心的人的关系 -->
	<update id="updateUserConnection" parameterType="pd">
		update sys_app_user_and_user set connection = #{connection} where 
		user_id_one = #{USERID_ONE} and user_id_two = #{USERID_TWO}
	</update>
	
	<!-- 查询该用户a有没有查看和修改用户b的权限 -->
	<select id="findUserAndUser" parameterType="pd" resultType="pd">
		select ISPRIVACY,ISMODIFY from sys_app_user_and_user where user_id_one = 
		#{USERID_ONE} and user_id_two = #{USERID_TWO}
	</select>
	
	
	<!-- 全部会员 -->
	<select id="listAllUser" parameterType="pd" resultType="pd">
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.END_TIME,
				u.YEARS,
				u.STATUS,
				u.EMAIL,
				u.PHONE,
				u.SFID,
				u.NUMBER,
				u.SEX,
				u.BIRTHDAY,
				u.MARRIAGESTATUS,
				u.HEIGHT,
				u.WEIGHT,
				u.BIRTHPLACE,
				u.LIVEPLACE,
				u.CAREER,
				u.DEGREE,
				u.OPENID,
				u.AVATAR,
				u.CREATEBY,
				u.CREATEON,
				r.ROLE_ID,
				r.ROLE_NAME
		from <include refid="tableName"></include> u, <include refid="roleTableName"></include> r 
		where u.ROLE_ID = r.ROLE_ID 
		and r.PARENT_ID = '2'
		<if test="keywords != null and keywords!= ''"><!-- 关键词检索 -->
			and (
				u.USERNAME LIKE CONCAT(CONCAT('%', #{keywords}),'%')
				or
				u.EMAIL LIKE CONCAT(CONCAT('%', #{keywords}),'%')
				or
				u.NUMBER LIKE CONCAT(CONCAT('%', #{keywords}),'%')
				)
		</if>
		<if test="ROLE_ID != null and ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{ROLE_ID} 
		</if>
		<if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 到期时间检索 -->
			and u.END_TIME &gt;= #{lastLoginStart} 
		</if>
		<if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 到期时间检索 -->
			and u.END_TIME &lt;= #{lastLoginEnd} 
		</if>
		<if test="STATUS != null and STATUS != ''"><!-- 状态检索 -->
			and u.STATUS=#{STATUS} 
		</if>
		order by u.NAME
	</select>
	
	<!-- 批量删除用户 -->
	<delete id="deleteAllU" parameterType="String">
		delete from <include refid="tableName"></include>
		where 
			USER_ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
	<!-- 获取总数 -->
	<select id="getAppUserCount" parameterType="String" resultType="pd">
		select 
			count(USER_ID) appUserCount
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- shouxin -->
</mapper>