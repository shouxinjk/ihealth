<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">

	<resultMap type="User" id="userAndRoleResultMap">
		<id column="USER_ID" property="USER_ID"/>
		<result column="USERNAME" property="USERNAME"/>
		<result column="PASSWORD" property="PASSWORD"/>
		<result column="NAME" property="NAME"/>
		<result column="RIGHTS" property="RIGHTS"/>
		<result column="LAST_LOGIN" property="LAST_LOGIN"/>
		<result column="IP" property="IP"/>
		<result column="STATUS" property="STATUS"/>
		<result column="SKIN" property="SKIN"/>
		<association property="role" column="ROLE_ID" javaType="Role">
			<id column="ROLE_ID" property="ROLE_ID"/>
			<result column="ROLE_NAME" property="ROLE_NAME"/>
			<result column="ROLE_RIGHTS" property="RIGHTS"/>
		</association>
	</resultMap>
	<resultMap type="User" id="userResultMap">
		<id column="USER_ID" property="USER_ID"/>
		<result column="USERNAME" property="USERNAME"/>
		<result column="PASSWORD" property="PASSWORD"/>
		<result column="NAME" property="NAME"/>
		<result column="RIGHTS" property="RIGHTS"/>
		<result column="LAST_LOGIN" property="LAST_LOGIN"/>
		<result column="IP" property="IP"/>
		<result column="STATUS" property="STATUS"/>
		<result column="ROLE_ID" property="ROLE_ID"/>
		<result column="SKIN" property="SKIN"/>
	</resultMap>
	
	<!--表名 -->
	<sql id="tableName">
		SYS_USER
	</sql>
	<sql id="roleTableName">
		SYS_ROLE
	</sql>
	
	<!-- 用户关联关系表 -->
	<sql id="useranduser">
		SYS_USERANDUSER
	</sql>
	<!-- 用户关联关系表的字段 -->
	<sql id="userAttribute">
		useranduser_id,
		user_id_one,
		user_id_two,
		connection
	</sql>
	
	<!-- 用户关联关系表的值 -->
	<sql id="userValue">
		#{useranduser_id},
		#{user_id_one},
		#{user_id_two},
		#{connection}
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		USER_ID,
		USERNAME,
		PASSWORD,
		NAME,
		RIGHTS,
		ROLE_ID,
		LAST_LOGIN,
		IP,
		STATUS,
		SKIN,
		BZ,
		NUMBER,
		PHONE,
		EMAIL,
		OPENID,
		ALIAS,
		BIRTHDAY,
		SEX,
		BIRTHPLACE,
		LIVEPLACE,
		MARRIAGESTATUS,
		CAREER,
		DEGREE,
		AVATAR,
		HEIGHT,
		WEIGHT
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{USER_ID},
		#{USERNAME},
		#{PASSWORD},
		#{NAME},
		#{RIGHTS},
		#{ROLE_ID},
		#{LAST_LOGIN},
		#{IP},
		#{STATUS},
		#{SKIN},
		#{BZ},
		#{NUMBER},
		#{PHONE},
		#{EMAIL},
		#{OPENID},
		#{ALIAS},
		#{BIRTHDAY},
		#{SEX},
		#{BIRTHPLACE},
		#{LIVEPLACE},
		#{MARRIAGESTATUS},
		#{CAREER},
		#{DEGREE},
		#{AVATAR},
		#{HEIGHT},
		#{WEIGHT}
	</sql>
	
	<!-- 根据用户ID查询所有的关联用户 -->
	<select id="findUserCastUser" parameterType="pd" resultType="pd">
		SELECT 
		  *
		FROM
		  sys_user u,
		  sys_useranduser uu 
		WHERE u.`USER_ID` = uu.`user_id_two` 
		  AND uu.`user_id_one` = #{user_id_one}
	</select>
	
	<!-- 查询关系是否存在 -->
	<select id="findConnectionWhether" parameterType="pd" resultType="pd">
		SELECT 
		  * 
		FROM
		  sys_useranduser uu 
		WHERE uu.`user_id_one` = #{user_id_one} 
		  AND uu.`user_id_two` = #{user_id_two} 
	</select>
	
	
	
	<!-- 判断用户名和密码 -->
	<select id="getUserInfo" parameterType="pd" resultType="pd">
		select <include refid="Field"></include> from
		<include refid="tableName"></include>
		where 1=1
		<if test="USERNAME!=null and PASSWORD!=null">
		and USERNAME = #{USERNAME} and PASSWORD=#{PASSWORD}
		</if>
		<if test="USER_ID!=null and USER_ID>0">
		and USER_ID = #{USER_ID}
		</if>
	</select>
	
	<!-- 根据用户ID 查询文章推送信息 -->
	<select id ="findArticlesById" parameterType="pd" resultType="pd">
		SELECT * FROM tb_article a
		<where>
			<if test="CREATEBY != null and CREATEBY != ''">
				and a.CREATEBY = #{CREATEBY}
			</if>
		</where>	
	</select>
	
	<!-- 根据用户ID 获取用户选中的标签 -->
	<select id="findTagById" resultType="pd" parameterType="pd">
				SELECT 
		  t.* 
		FROM
		  admin_tag t 
		  LEFT JOIN admin_userandtag ut 
		    ON t.`TAG_ID` = ut.`tag_id` 
		  LEFT JOIN sys_user u 
		    ON u.`USER_ID` = ut.`user_id` 
		  LEFT JOIN admin_tagandarticle ta 
		    ON ta.`tag_id` = t.`TAG_ID` 
		  LEFT JOIN tb_article a 
		    ON a.`ARTICLE_ID` = ta.`article_id` 
		<where>
			<if test="USER_ID != null and USER_ID != ''">
				and u.USER_ID = #{USER_ID}
			</if>
		</where>
	</select>
	
	<!-- 根据用户ID获取疾病信息 -->
	<select id="findDiseaseById" resultType="pd" parameterType="pd">
		SELECT 
		  d.* 
		FROM
		  admin_disease d 
		  LEFT JOIN admin_diseaseanduser du 
		    ON d.`DISEASE_ID` = du.`DISEASE_ID`
		  LEFT JOIN sys_user u 
		    ON u.`USER_ID` = du.`USER_ID` 
		  LEFT JOIN admin_diseaseanddiseasecategory dd
		    ON d.`DISEASE_ID` = dd.`DISEASE_ID` 
		  LEFT JOIN admin_diseasecategory dc
		    ON dd.`DISEASECATEGORY_ID` = dc.`DISEASECATEGORY_ID`
		<where>
			<if test="USER_ID != null and USER_ID != ''">
				and u.USER_ID = #{USER_ID}
			</if>
		</where>
	</select>
	
	<!-- 新增用户时，向admin_userandtag表新增信息 -->
	<insert id="saveUserAndTag" parameterType="pd">
		insert into admin_userandtag values(#{id},#{user_id},#{tag_id})
	</insert>
	
	
	<!-- 新增用户时，向admin_useranddisease(既往病史表)表新增信息 -->
	<insert id="saveUserAndDisease" parameterType="pd">
		insert into admin_useranddisease values(#{id},#{user_id},#{disease_id})
	</insert>
	
	<!-- 新增用户时，向admin_userandfhdisease(家族遗传病表)表新增信息 -->
	<insert id="saveUserAndFhDisease" parameterType="pd">
		insert into admin_userandfhdisease values(#{id},#{user_id},#{disease_id})
	</insert>
	
	
	<!-- 根据用户ID 查询所有关联的标签信息 -->
	<select id="findTagsByUserId" parameterType="pd" resultType="pd">
		SELECT ut.tag_id FROM admin_userandtag ut WHERE ut.user_id = #{user_id}
	</select>
	
	
	<!-- 根据用户ID 查询所有关联的既往疾病信息 -->
	<select id="findDiseaseByUserId" parameterType="pd" resultType="pd">
		SELECT ud.disease_id FROM admin_useranddisease ud WHERE ud.user_id = #{user_id}
	</select>
	
	<!-- 根据用户ID 查询所有关联的家族遗传疾病信息 -->
	<select id="findFhDiseaseByUserId" parameterType="pd" resultType="pd">
		SELECT ufd.disease_id FROM admin_userandfhdisease ufd WHERE ufd.user_id = #{user_id}
	</select>
	
	
	<!-- 根据用户ID 删除所有关联的标签信息 -->
	<delete id="deleteTags" parameterType="pd">
		DELETE FROM admin_userandtag WHERE user_id = #{user_id}
	</delete>
	
	<!-- 根据用户ID 删除所有关联的既往疾病信息 -->
	<delete id="deleteDiseases" parameterType="pd">
		DELETE FROM admin_useranddisease WHERE user_id = #{user_id}
	</delete>
	
	<!-- 根据用户ID 删除所有关联的家族遗传疾病信息 -->
	<delete id="deleteFhDiseases" parameterType="pd">
		DELETE FROM admin_userandfhdisease WHERE user_id = #{user_id}
	</delete>
	
	<!-- 更新登录时间 -->
	<update id="updateLastLogin" parameterType="pd" >
		update
		<include refid="tableName"></include>
		set 
		LAST_LOGIN = #{LAST_LOGIN} 
		where USER_ID = #{USER_ID}
	</update>
	
	<!-- 通过用户ID获取用户信息和角色信息 -->
	<select id="getUserAndRoleById" parameterType="String" resultMap="userAndRoleResultMap">
		select  u.USER_ID,
				u.USERNAME,
				u.NAME,
				u.RIGHTS as USER_RIGHTS,
				u.PASSWORD,
				u.SKIN,
				r.ROLE_ID,
				r.ROLE_NAME,
				r.RIGHTS as ROLE_RIGHTS 
		from 
		<include refid="tableName"></include> u 
		left join 
		<include refid="roleTableName"></include> r 
		on u.ROLE_ID=r.ROLE_ID 
		where u.STATUS=0 
		and u.USER_ID=#{USER_ID}
	</select>
	
	<!-- 通过USERNAME获取数据 -->
	<select id="findByUsername" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			USERNAME = #{USERNAME}
	</select>
	
	<!-- 通过用户名或者电话号码获取模糊查询数据 -->
	<select id="findLike" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		<where>
			<if test="NAME != null and NAME != ''">
				and NAME like CONCAT(CONCAT('%',#{NAME}),'%')
			</if>
			<if test="PHONE != null and PHONE != ''">
				and PHONE like CONCAT(CONCAT('%',#{PHONE}),'%')
			</if>
		</where>
	</select>
	
	<!-- 通过Phone获取数据 -->
	<select id="findByPhone" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			PHONE = #{PHONE}
	</select>
	
	
	<!-- 存入IP -->
	<update id="saveIP" parameterType="pd" >
		update 
		<include refid="tableName"></include> 
		set 
			IP = #{IP}
		where 
			USERNAME = #{USERNAME}
	</update>
	
	<!-- 列出某角色下的所有用户 -->
	<select id="listAllUserByRoldId"  parameterType="pd" resultType="pd" >
		select USER_ID
		from 
		<include refid="tableName"></include>
		where 
		ROLE_ID = #{ROLE_ID}
	</select>
	
	<!-- 用户列表 -->
	<select id="userlistPage" parameterType="page" resultType="pd" >
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.EMAIL,
				u.NUMBER,
				u.PHONE,
				u.RIGHTS,
				u.STATUS,
				u.SKIN,
				u.BZ,
				u.OPENID,
				u.ALIAS,
				u.BIRTHDAY,
				u.SEX,
				u.BIRTHPLACE,
				u.LIVEPLACE,
				u.MARRIAGESTATUS,
				u.CAREER,
				u.DEGREE,
				u.AVATAR,
				u.HEIGHT,
				u.WEIGHT,
				r.ROLE_ID,
				r.ROLE_NAME
		from <include refid="tableName"></include> u, <include refid="roleTableName"></include> r 
		where u.ROLE_ID = r.ROLE_ID 
		and u.USERNAME != 'admin'
		and r.PARENT_ID = '1'
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					 u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					 u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or
					 u.NUMBER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 u.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 u.PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 u.BIRTHPLACE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 u.LIVEPLACE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{pd.ROLE_ID} 
		</if>
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{pd.lastLoginStart} 
		</if>
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{pd.lastLoginEnd} 
		</if>
		order by u.LAST_LOGIN desc
	</select>
	
	<!-- 通过邮箱获取数据 -->
	<select id="findByUE" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			EMAIL = #{EMAIL}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过编号获取数据 -->
	<select id="findByUN" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			NUMBER = #{NUMBER}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过user_id获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		<where>
			<if test="USER_ID != null and USER_ID != ''">
				and USER_ID = #{USER_ID}
			</if>
			<if test="OPENID != null and OPENID != ''">
				and OPENID = #{OPENID}
			</if>
		</where>
			
	</select>
	
	<!-- 新增用户 -->
	<insert id="saveU" parameterType="pd" >
		insert into <include refid="tableName"></include> (
			<include refid="Field"></include>
		) values (
			<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 新增关联用户 -->
	<insert id="saveRelationUser" parameterType="pd" >
		insert into <include refid="useranduser"></include> (
			<include refid="userAttribute"></include>
		) values (
			<include refid="userValue"></include>
		)
	</insert>
	
	<!-- 修改 -->
	<update id="editU" parameterType="pd" >
		update  <include refid="tableName"></include>
			set USERNAME				= #{USERNAME},
				NAME 					= #{NAME},
				ROLE_ID 				= #{ROLE_ID},
				BZ						= #{BZ},
				EMAIL					= #{EMAIL},
				NUMBER					= #{NUMBER},
				PHONE					= #{PHONE},
				BIRTHDAY				= #{BIRTHDAY},
				ALIAS					= #{ALIAS},
				OPENID                  = #{OPENID},
				LIVEPLACE				= #{LIVEPLACE},
				BIRTHPLACE				= #{BIRTHPLACE},
				MARRIAGESTATUS			= #{MARRIAGESTATUS},
				CAREER					= #{CAREER},
				DEGREE					= #{DEGREE},
				AVATAR					= #{AVATAR},
				HEIGHT					= #{HEIGHT},
				WEIGHT					= #{WEIGHT},
				SEX						= #{SEX}
			<if test="PASSWORD != null and PASSWORD != ''">
				,PASSWORD				= #{PASSWORD}
			</if>
			where 
				USER_ID = #{USER_ID}
	</update>
	
	<!-- 删除用户 -->
	<delete id="deleteU" parameterType="pd" flushCache="false">
		delete from <include refid="tableName"></include>
		where 
			USER_ID = #{USER_ID}
	</delete>
	
	<delete id="deleteRelationUser" parameterType="pd" flushCache="false">
		DELETE 
		FROM
		  sys_useranduser 
		WHERE sys_useranduser.`useranduser_id` = #{useranduser_id}
	</delete>
	
	<!-- 批量删除用户 -->
	<delete id="deleteAllU" parameterType="String" >
		delete from <include refid="tableName"></include>
		where 
			USER_ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
	<!-- 用户列表(全部) -->
	<select id="listAllUser" parameterType="pd" resultType="pd" >
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.EMAIL,
				u.NUMBER,
				u.PHONE,
				u.RIGHTS,
				u.STATUS,
				u.SKIN,
				u.BZ,
				u.OPENID,
				u.ALIAS,
				u.BIRTHDAY,
				u.SEX,
				u.BIRTHPLACE,
				u.LIVEPLACE,
				u.MARRIAGESTATUS,
				u.CAREER,
				u.DEGREE,
				u.AVATAR,
				u.HEIGHT,
				u.WEIGHT,
				r.ROLE_ID,
				r.ROLE_NAME
		from <include refid="tableName"></include> u, <include refid="roleTableName"></include> r 
		where u.ROLE_ID = r.ROLE_ID 
		and u.USERNAME != 'admin'
		and r.PARENT_ID = '1'
		<if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
			and
				(
					 u.USERNAME LIKE CONCAT(CONCAT('%', #{keywords}),'%')
					 or 
					 u.EMAIL LIKE CONCAT(CONCAT('%', #{keywords}),'%') 
					 or
					 u.NUMBER LIKE CONCAT(CONCAT('%', #{keywords}),'%')
					 or
					 u.NAME LIKE CONCAT(CONCAT('%', #{keywords}),'%')
					 or
					 u.PHONE LIKE CONCAT(CONCAT('%', #{keywords}),'%')
				)
		</if>
		<if test="ROLE_ID != null and ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{ROLE_ID} 
		</if>
		<if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{lastLoginStart} 
		</if>
		<if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{lastLoginEnd} 
		</if>
		order by u.LAST_LOGIN desc
	</select>
	
	<select id="findUsers" resultType="pd" parameterType="pd">
		select * from sys_user u
		<where>
			<if test="keywords!= null and keywords != ''">
				u.PHONE LIKE CONCAT(CONCAT('%', #{keywords}),'%')
			</if>
		</where>
	</select>
	
	<select id="findAllUserByOpenId" resultType="pd">
		SELECT 
		  * 
		FROM
		  sys_user u 
		WHERE u.`OPENID` IS NOT NULL 
		<if test="keywords!= null and keywords != ''">
			and u.PHONE LIKE CONCAT(CONCAT('%', #{keywords}),'%')
		</if>
	</select>
	
	
	<!-- 获取总数 -->
	<select id="getUserCount" parameterType="String" resultType="pd">
		select 
			count(USER_ID) userCount
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- shouxin -->
</mapper>