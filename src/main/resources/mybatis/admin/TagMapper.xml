<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TagMapper">

	<resultMap type="Tag" id="TagResultMap">
		<id column="TAG_ID" property="TAG_ID" />
		<result column="NAME" property="NAME"/>
		<result column="EXPRESSION" property="EXPRESSION"/>
		<result column="CREATEBY" property="CREATEBY"/>
		<result column="CREATEON" property="CREATEON"/>
	</resultMap>
	
	
	<!--表名 -->
	<sql id="tableName">
		ADMIN_TAG
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		NAME,	
		EXPRESSION,	
		CREATEBY,	
		CREATEON,	
		TAG_ID,
		DESCRIPTION
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{NAME},	
		#{EXPRESSION},	
		#{CREATEBY},	
		#{CREATEON},	
		#{TAG_ID},
		#{DESCRIPTION}
	</sql>
	
	<!-- 字段 -->
	<sql id="Field1">
		NAME,	
		EXPRESSION,	
		CREATEBY,	
		CREATEON,	
		TAG_ID,
		TAGCATEGORY_ID,
		DESCRIPTION
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue1">
		#{NAME},	
		#{EXPRESSION},	
		#{CREATEBY},	
		#{CREATEON},	
		#{TAG_ID},
		#{TAGCATEGORY_ID},
		#{DESCRIPTION}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field1"></include>
		) values (
	<include refid="FieldValue1"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			TAG_ID = #{TAG_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			NAME = #{NAME},
			EXPRESSION = #{EXPRESSION},
			DESCRIPTION = #{DESCRIPTION},
		TAG_ID = TAG_ID
		where 
		TAG_ID = #{TAG_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			TAG_ID = #{TAG_ID}
	</select>
	
		<!-- 通过tagCategoryID获取tag数据 -->
	<select id="findALLByTagCategoryId" parameterType="pd" resultType="pd">
		select 
		<include refid="Field1"></include>
		from 
		<include refid="tableName"></include> t
		where t.TAGCATEGORY_ID =#{TAGCATEGORY_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		t.NAME as NAME,	
		t.EXPRESSION AS EXPRESSION,	
		t.TAG_ID as TAG_ID,
		t.DESCRIPTION as DESCRIPTION,
		tc.ISEXCLUSIVE as ISEXCLUSIVE
		from 
		<include refid="tableName"></include> t ,admin_tagcategory tc 
		where t.TAGCATEGORY_ID = tc.TAGCATEGORY_ID  
		<if test="pd.TAGCATEGORY_ID!= null and pd.TAGCATEGORY_ID != ''"><!-- 检索 -->
		and t.TAGCATEGORY_ID = #{pd.TAGCATEGORY_ID}
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				
					NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				<!--	根据需求自己加检索条件	 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 新增属于用户的标签-->
	<insert id="userSaveTag" parameterType="pd">
		insert into 
		admin_userandtag
		(
		id,user_id,tag_id
		) values
          (
		#{ID},#{USER_ID},#{TAG_ID}
		)
		
	</insert>
	
	<!-- 删除属于这个用户的标签信息 -->
	<delete id="deleteTagByUserID" parameterType="pd">
		delete from
		admin_userandtag
		where user_id=#{USER_ID}
	</delete>
	
		<!-- 通过用户id获取tag数据 -->
	<select id="findALLByUserID" parameterType="pd" resultType="pd">
		select 
		t.DESCRIPTION as TDESCRIPTION,t.TAG_ID AS TAG_ID,t.NAME AS NAME,t.TAGCATEGORY_ID AS TAGCATEGORY_ID,t.EXPRESSION AS EXPRESSION
		 from admin_tag t,admin_userandtag ut where t.TAG_ID=ut.tag_id and ut.user_id=#{USER_ID}
	</select>
	
	<!-- 通过用户id获取tag数据 并分组查询-->
	<select id="findAllGroupByUId" parameterType="pd" resultType="pd">
		SELECT 
		  t.DESCRIPTION AS TDESCRIPTION,
		  t.TAG_ID AS TAG_ID,
		  t.NAME AS NAME,
		  t.TAGCATEGORY_ID AS TAGCATEGORY_ID,
		  t.EXPRESSION AS EXPRESSION 
		FROM
		  admin_tag t,
		  admin_userandtag ut 
		WHERE t.TAG_ID = ut.tag_id 
		  AND ut.user_id = #{user_id} 
		GROUP BY t.TAGCATEGORY_ID
	</select>
	
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			TAG_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- shouxin -->
</mapper>